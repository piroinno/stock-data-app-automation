name: Testing application packages
description: "Testing application packages"
inputs:
  packagefeed:
    description: "Azure package feed"
    required: true
  packagefeedpassword:
    description: "Azure package feed password"
    required: true
  flagsmithenvironmentkey:
    description: "Flagsmith environment key"
    required: false
  testdatabasepassword:
    description: "Test database password"
    required: false
  testdatabasehost:
    description: "Test database host"
    required: false
  appfolder:
    description: "Application folder"
    required: false
  
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Setting up Python 3.11
      uses: actions/setup-python@v2
      id: installed-python-version
      with:
        python-version: 3.11
    - name: Installing and configuring Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.3.2
        virtualenvs-create: true
        virtualenvs-path: ~/.venv
        virtualenvs-in-project: false
        installer-parallel: true
    - name: Using Cache for Poetry Dependencies
      uses: actions/cache@v2
      id: cached-dependencies
      with:
        path: ~/.venv
        key: venv-${{ runner.os }}-${{ steps.installed-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Installing dependencies
      shell: bash
      run: |
        cd ${{ inputs.appfolder }}
        poetry source add --secondary pypifeed "https://${{ inputs.packagefeed }}/simple"
        poetry config http-basic.pypifeed pypifeed ${{ inputs.packagefeedpassword }}
        poetry install
      if: steps.cached-dependencies.outputs.cache-hit != 'true'
    - name: Linting with flake8
      shell: bash
      run: |
        cd ${{ inputs.appfolder }}
        poetry run python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Testing with pytest
      shell: bash
      run: |
        cd ${{ inputs.appfolder }}
        poetry run python -m pytest
      env:
        DATABASE_URL: postgresql://postgres:${{ inputs.testdatabasepassword }}@${{ inputs.testdatabasehost }}:5432/postgres
        FLAG_SMITH_ENVIRONMENT_KEY: ${{ inputs.flagsmithenvironmentkey }}