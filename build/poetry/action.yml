name: Package application
description: "Package application"
inputs:
  packagefeed:
    description: "Azure package feed"
    required: true
  packagefeedpassword:
    description: "Azure package feed password"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Setting up Python 3.11
      uses: actions/setup-python@v2
      id: installed-python-version
      with:
        python-version: 3.11
    - name: Installing and configuring Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.3.2
        virtualenvs-create: true
        virtualenvs-path: ~/.venv
        virtualenvs-in-project: false
        installer-parallel: true
    - name: Using Cache for Poetry Dependencies
      uses: actions/cache@v2
      id: cached-dependencies
      with:
        path: ~/.venv
        key: venv-${{ runner.os }}-${{ steps.installed-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Installing dependencies
      shell: bash
      run: |
        poetry source add --secondary downloadfeed "https://${{ inputs.packagefeed }}/simple"
        poetry config http-basic.downloadfeed downloadfeed ${{ inputs.packagefeedpassword }}
        poetry install
      if: steps.cached-dependencies.outputs.cache-hit != 'true'
    - name: Create application package
      shell: pwsh
      run: |
        $poetry_version = poetry version
        $major= ($poetry_version -split '.')[0]
        $minor= ($poetry_version -split '.')[1]
        $patch= ($poetry_version -split '.')[2]

        $run_attempt=${{ github.run_attempt }}

        if(($run_attempt + $patch) > 100){
          $patch = 0
          if ((1 + $minor) > 100){
            $minor = 0
            $major += 1
          }else{
            $minor += $run_attempt
          }
        }else{
          $patch += $run_attempt
        }
        poetry version "$patch.$minor.$major"
        poetry build --format wheel
        poetry config repositories.uploadloadfeed "https://${{ inputs.packagefeed }}/upload"
        poetry publish -r uploadloadfeed -u uploadloadfeed -p ${{ inputs.packagefeedpassword }}
